<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Folder" referent="RBX8B5E2A61A0F544C190F829801D0D595A">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<string name="Name">AccessoryImporterLite</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Script" referent="RBX010D9F5EC75B4085B34B27A744442A8B">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{CC5AF668-7045-46B2-AF3C-89C90F26BC8B}</string>
				<ProtectedString name="Source"><![CDATA[local Plugin = script.Parent.Parent

local TOOLBAR_NAME = "Accessory Importer Lite"
local WIDGET_TITLE = "âœ¨ Accessory Importer Lite"
local WIDGET_SIZE = Vector2.new(450, 500)

local COLORS = {
	Background = Color3.fromHex("#1e1e2e"),
	Card = Color3.fromHex("#2a2a3a"),
	Primary = Color3.fromHex("#7aa2f7"),
	PrimaryHover = Color3.fromHex("#8ab4ff"),
	Secondary = Color3.fromHex("#3b3b4d"),
	SecondaryHover = Color3.fromHex("#4c4c5e"),
	Text = Color3.fromHex("#e0e0e0"),
	SubText = Color3.fromHex("#a0a0a0"),
	Success = Color3.fromHex("#9ece6a"),
	Error = Color3.fromHex("#f7768e"),
	Warning = Color3.fromHex("#e0af68")
}

local toolbar = plugin:CreateToolbar(TOOLBAR_NAME)
local button = toolbar:CreateButton("Open", "Import accessories", "rbxassetid://4321867290")

local widgetInfo = DockWidgetPluginGuiInfo.new(
	Enum.InitialDockState.Float,
	false,
	false,
	WIDGET_SIZE.X,
	WIDGET_SIZE.Y
)

local widget = plugin:CreateDockWidgetPluginGui("LiteAccessoryImporter", widgetInfo)
widget.Title = WIDGET_TITLE
widget.Name = "LiteAccessoryImporter"
widget.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, 0, 1, 0)
scrollFrame.BackgroundColor3 = COLORS.Background
scrollFrame.BorderSizePixel = 0
scrollFrame.ScrollBarThickness = 8
scrollFrame.ScrollBarImageColor3 = COLORS.Primary
scrollFrame.ScrollBarImageTransparency = 0.5
scrollFrame.CanvasSize = UDim2.new(0, 0, 1.2, 0)
scrollFrame.Parent = widget

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(1, -20, 1.2, 0)
mainFrame.Position = UDim2.new(0, 10, 0, 0)
mainFrame.BackgroundTransparency = 1
mainFrame.Parent = scrollFrame

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 12)
uiCorner.Parent = widget

local title = Instance.new("TextLabel")
title.Text = "ACCESSORY IMPORTER LITE"
title.TextColor3 = COLORS.Primary
title.TextSize = 18
title.Font = Enum.Font.GothamBold
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 10)
title.BackgroundTransparency = 1
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = mainFrame

local liteLabel = Instance.new("TextLabel")
liteLabel.Text = "Lite Version - Single Import Only"
liteLabel.TextColor3 = COLORS.SubText
liteLabel.TextSize = 12
liteLabel.Font = Enum.Font.Gotham
liteLabel.Size = UDim2.new(1, 0, 0, 20)
liteLabel.Position = UDim2.new(0, 0, 0, 35)
liteLabel.BackgroundTransparency = 1
liteLabel.TextXAlignment = Enum.TextXAlignment.Left
liteLabel.Parent = mainFrame

local divider = Instance.new("Frame")
divider.Size = UDim2.new(1, 0, 0, 1)
divider.Position = UDim2.new(0, 0, 0, 60)
divider.BackgroundColor3 = COLORS.Card
divider.BorderSizePixel = 0
divider.Parent = mainFrame

local singleModeFrame = Instance.new("Frame")
singleModeFrame.Size = UDim2.new(1, 0, 0, 320)
singleModeFrame.Position = UDim2.new(0, 0, 0, 70)
singleModeFrame.BackgroundTransparency = 1
singleModeFrame.Visible = true
singleModeFrame.Name = "SingleModeFrame"
singleModeFrame.Parent = mainFrame

local singleInputCard = Instance.new("Frame")
singleInputCard.Size = UDim2.new(1, 0, 0, 130)
singleInputCard.BackgroundColor3 = COLORS.Card
singleInputCard.Parent = singleModeFrame

local singleInputCardCorner = Instance.new("UICorner")
singleInputCardCorner.CornerRadius = UDim.new(0, 10)
singleInputCardCorner.Parent = singleInputCard

local singleInputLabel = Instance.new("TextLabel")
singleInputLabel.Text = "ACCESSORY ID"
singleInputLabel.TextColor3 = COLORS.SubText
singleInputLabel.TextSize = 12
singleInputLabel.Font = Enum.Font.GothamMedium
singleInputLabel.Size = UDim2.new(1, -20, 0, 15)
singleInputLabel.Position = UDim2.new(0, 10, 0, 10)
singleInputLabel.BackgroundTransparency = 1
singleInputLabel.TextXAlignment = Enum.TextXAlignment.Left
singleInputLabel.Parent = singleInputCard

local singleInputBox = Instance.new("TextBox")
singleInputBox.PlaceholderText = "Enter accessory ID"
singleInputBox.Size = UDim2.new(1, -20, 0, 40)
singleInputBox.Position = UDim2.new(0, 10, 0, 30)
singleInputBox.BackgroundColor3 = COLORS.Secondary
singleInputBox.TextColor3 = COLORS.Text
singleInputBox.Font = Enum.Font.Gotham
singleInputBox.TextSize = 14
singleInputBox.Parent = singleInputCard

local singleInputBoxCorner = Instance.new("UICorner")
singleInputBoxCorner.CornerRadius = UDim.new(0, 6)
singleInputBoxCorner.Parent = singleInputBox

local singlePreviewButton = Instance.new("TextButton")
singlePreviewButton.Text = "PREVIEW"
singlePreviewButton.Size = UDim2.new(0.48, 0, 0, 40)
singlePreviewButton.Position = UDim2.new(0, 10, 0, 80)
singlePreviewButton.BackgroundColor3 = COLORS.Secondary
singlePreviewButton.TextColor3 = COLORS.Text
singlePreviewButton.Font = Enum.Font.GothamBold
singlePreviewButton.TextSize = 14
singlePreviewButton.Parent = singleInputCard

local singleImportButton = Instance.new("TextButton")
singleImportButton.Text = "IMPORT"
singleImportButton.Size = UDim2.new(0.48, 0, 0, 40)
singleImportButton.Position = UDim2.new(0.52, 10, 0, 80)
singleImportButton.BackgroundColor3 = COLORS.Primary
singleImportButton.TextColor3 = COLORS.Text
singleImportButton.Font = Enum.Font.GothamBold
singleImportButton.TextSize = 14
singleImportButton.Parent = singleInputCard

local buttonCorner1 = Instance.new("UICorner")
buttonCorner1.CornerRadius = UDim.new(0, 6)
buttonCorner1.Parent = singlePreviewButton

local buttonCorner2 = Instance.new("UICorner")
buttonCorner2.CornerRadius = UDim.new(0, 6)
buttonCorner2.Parent = singleImportButton

local previewFrame = Instance.new("Frame")
previewFrame.Size = UDim2.new(1, 0, 0, 180)
previewFrame.Position = UDim2.new(0, 0, 0, 140)
previewFrame.BackgroundColor3 = COLORS.Card
previewFrame.Parent = singleModeFrame

local previewFrameCorner = Instance.new("UICorner")
previewFrameCorner.CornerRadius = UDim.new(0, 10)
previewFrameCorner.Parent = previewFrame

local previewImage = Instance.new("ImageLabel")
previewImage.Size = UDim2.new(1, -20, 0.7, 0)
previewImage.Position = UDim2.new(0, 10, 0, 10)
previewImage.BackgroundColor3 = COLORS.Secondary
previewImage.Image = "rbxassetid://7078533064"
previewImage.Parent = previewFrame

local previewImageCorner = Instance.new("UICorner")
previewImageCorner.CornerRadius = UDim.new(0, 6)
previewImageCorner.Parent = previewImage

local previewName = Instance.new("TextLabel")
previewName.Text = "No accessory selected"
previewName.TextColor3 = COLORS.Text
previewName.TextSize = 14
previewName.Font = Enum.Font.GothamMedium
previewName.Size = UDim2.new(1, -20, 0, 30)
previewName.Position = UDim2.new(0, 10, 0.7, 10)
previewName.BackgroundTransparency = 1
previewName.Parent = previewFrame

local characterCard = Instance.new("Frame")
characterCard.Size = UDim2.new(1, 0, 0, 140)
characterCard.Position = UDim2.new(0, 0, 0, 330)
characterCard.BackgroundColor3 = COLORS.Card
characterCard.Parent = mainFrame

local characterCardCorner = Instance.new("UICorner")
characterCardCorner.CornerRadius = UDim.new(0, 10)
characterCardCorner.Parent = characterCard

local selectCharacterButton = Instance.new("TextButton")
selectCharacterButton.Text = "SELECT CHARACTER"
selectCharacterButton.Size = UDim2.new(1, -20, 0, 40)
selectCharacterButton.Position = UDim2.new(0, 10, 0, 20)
selectCharacterButton.BackgroundColor3 = COLORS.Secondary
selectCharacterButton.TextColor3 = COLORS.Text
selectCharacterButton.Font = Enum.Font.GothamBold
selectCharacterButton.TextSize = 14
selectCharacterButton.Parent = characterCard

local selectButtonCorner = Instance.new("UICorner")
selectButtonCorner.CornerRadius = UDim.new(0, 6)
selectButtonCorner.Parent = selectCharacterButton

local selectedCharacterLabel = Instance.new("TextLabel")
selectedCharacterLabel.Text = "No character selected"
selectedCharacterLabel.TextColor3 = COLORS.SubText
selectedCharacterLabel.TextSize = 12
selectedCharacterLabel.Font = Enum.Font.Gotham
selectedCharacterLabel.Size = UDim2.new(1, -20, 0, 20)
selectedCharacterLabel.Position = UDim2.new(0, 10, 0, 65)
selectedCharacterLabel.BackgroundTransparency = 1
selectedCharacterLabel.TextXAlignment = Enum.TextXAlignment.Center
selectedCharacterLabel.Parent = characterCard

local clearAccessoriesButton = Instance.new("TextButton")
clearAccessoriesButton.Text = "CLEAR ALL ACCESSORIES"
clearAccessoriesButton.Size = UDim2.new(1, -20, 0, 40)
clearAccessoriesButton.Position = UDim2.new(0, 10, 0, 90)
clearAccessoriesButton.BackgroundColor3 = COLORS.Error
clearAccessoriesButton.TextColor3 = COLORS.Text
clearAccessoriesButton.Font = Enum.Font.GothamBold
clearAccessoriesButton.TextSize = 14
clearAccessoriesButton.Parent = characterCard

local clearButtonCorner = Instance.new("UICorner")
clearButtonCorner.CornerRadius = UDim.new(0, 6)
clearButtonCorner.Parent = clearAccessoriesButton

local statusBar = Instance.new("Frame")
statusBar.Size = UDim2.new(1, 0, 0, 40)
statusBar.Position = UDim2.new(0, 0, 0, 480)
statusBar.BackgroundColor3 = COLORS.Card
statusBar.Parent = mainFrame

local statusBarCorner = Instance.new("UICorner")
statusBarCorner.CornerRadius = UDim.new(0, 10)
statusBarCorner.Parent = statusBar

local statusLabel = Instance.new("TextLabel")
statusLabel.Text = "Ready"
statusLabel.TextColor3 = COLORS.Text
statusLabel.TextSize = 14
statusLabel.Font = Enum.Font.Gotham
statusLabel.Size = UDim2.new(1, -20, 1, 0)
statusLabel.Position = UDim2.new(0, 10, 0, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.Parent = statusBar

local tweenService = game:GetService("TweenService")

local function setupButton(button, normalColor, hoverColor)
	button.AutoButtonColor = false
	button.BackgroundColor3 = normalColor

	button.MouseEnter:Connect(function()
		tweenService:Create(button, TweenInfo.new(0.15), {BackgroundColor3 = hoverColor}):Play()
	end)

	button.MouseLeave:Connect(function()
		tweenService:Create(button, TweenInfo.new(0.15), {BackgroundColor3 = normalColor}):Play()
	end)

	button.MouseButton1Down:Connect(function()
		tweenService:Create(button, TweenInfo.new(0.1), {Size = button.Size - UDim2.new(0, 0, 0.05, 0)}):Play()
	end)

	button.MouseButton1Up:Connect(function()
		tweenService:Create(button, TweenInfo.new(0.2), {Size = button.Size + UDim2.new(0, 0, 0.05, 0)}):Play()
	end)
end

setupButton(singlePreviewButton, COLORS.Secondary, COLORS.SecondaryHover)
setupButton(singleImportButton, COLORS.Primary, COLORS.PrimaryHover)
setupButton(selectCharacterButton, COLORS.Secondary, COLORS.SecondaryHover)
setupButton(clearAccessoriesButton, COLORS.Error, Color3.new(1, 0.3, 0.3))

local selectedCharacter = nil
local currentAccessoryInfo = nil

local function setStatus(text, color)
	statusLabel.Text = text
	statusLabel.TextColor3 = color
	statusLabel.TextTransparency = 1
	tweenService:Create(statusLabel, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
end

local function selectCharacter()
	local selection = game:GetService("Selection"):Get()

	for _, item in ipairs(selection) do
		local humanoid = item:FindFirstChildOfClass("Humanoid")
		if humanoid then
			selectedCharacter = item
			selectedCharacterLabel.Text = "Selected: "..item.Name
			selectedCharacterLabel.TextColor3 = COLORS.Success

			tweenService:Create(
				selectedCharacterLabel,
				TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
				{TextColor3 = COLORS.Success}
			):Play()

			setStatus("Character selected", COLORS.Success)
			return
		end
	end

	selectedCharacter = nil
	selectedCharacterLabel.Text = "No character selected"
	tweenService:Create(
		selectedCharacterLabel,
		TweenInfo.new(0.3),
		{TextColor3 = COLORS.SubText}
	):Play()
	setStatus("Select a model with Humanoid", COLORS.Error)
end

local function fetchAccessoryInfo(assetId)
	local success, result = pcall(function()
		return game:GetService("MarketplaceService"):GetProductInfo(assetId)
	end)

	if success then
		return result
	else
		setStatus("Failed to load data", COLORS.Error)
		return nil
	end
end

local function showPreview(assetId)
	local info = fetchAccessoryInfo(assetId)
	if not info then return end

	currentAccessoryInfo = info

	tweenService:Create(previewImage, TweenInfo.new(0.2), {ImageTransparency = 1}):Play()
	tweenService:Create(previewName, TweenInfo.new(0.2), {TextTransparency = 1}):Play()

	wait(0.2)

	previewImage.Image = info.IconImageAssetUrl or "rbxassetid://7078533064"
	previewName.Text = info.Name or "Unknown accessory"

	tweenService:Create(previewImage, TweenInfo.new(0.3), {ImageTransparency = 0}):Play()
	tweenService:Create(previewName, TweenInfo.new(0.3), {TextTransparency = 0}):Play()

	setStatus("Preview loaded", COLORS.Success)
end

local function clearAllAccessories()
	if not selectedCharacter then
		setStatus("Select a character first!", COLORS.Error)
		return
	end

	local accessoriesRemoved = 0
	for _, child in ipairs(selectedCharacter:GetChildren()) do
		if child:IsA("Accessory") then
			child:Destroy()
			accessoriesRemoved = accessoriesRemoved + 1
		end
	end

	if accessoriesRemoved > 0 then
		setStatus("Removed "..accessoriesRemoved.." accessories", COLORS.Success)
	else
		setStatus("No accessories to remove", COLORS.Warning)
	end
end

local function importSingleAccessory()
	if not selectedCharacter then
		setStatus("Select a character first!", COLORS.Error)
		return
	end

	local assetId = tonumber(singleInputBox.Text)
	if not assetId then
		setStatus("Enter a valid ID!", COLORS.Error)
		return
	end

	setStatus("Importing...", COLORS.Text)

	local success, errorMsg = pcall(function()
		local accessoryModel = game:GetService("InsertService"):LoadAsset(assetId)
		if accessoryModel then
			local foundAccessory = false

			for _, item in ipairs(accessoryModel:GetDescendants()) do
				if item:IsA("Accessory") then
					foundAccessory = true
					local humanoid = selectedCharacter:FindFirstChildOfClass("Humanoid")
					local scaleFactor = humanoid and humanoid.RigType == Enum.HumanoidRigType.R6 and 0.8 or 0.5

					local accessoryType = item:GetAttribute("AccessoryType") or item.Name
					for _, oldAcc in ipairs(selectedCharacter:GetChildren()) do
						if oldAcc:IsA("Accessory") and 
							(oldAcc:GetAttribute("AccessoryType") == accessoryType or oldAcc.Name == accessoryType) then
							oldAcc:Destroy()
						end
					end

					local handle = item:FindFirstChild("Handle")
					if handle then
						local originalSize = handle.Size
						handle.Size = Vector3.new(0.1, 0.1, 0.1)
						item.Parent = selectedCharacter

						tweenService:Create(
							handle,
							TweenInfo.new(0.5, Enum.EasingStyle.Elastic),
							{Size = originalSize * scaleFactor}
						):Play()
					else
						item.Parent = selectedCharacter
					end
				end
			end

			accessoryModel:Destroy()

			if not foundAccessory then
				setStatus("No accessory found in model", COLORS.Warning)
			else
				setStatus("Accessory added!", COLORS.Success)
			end
		end
	end)

	if not success then
		setStatus("Error: "..errorMsg, COLORS.Error)
	end
end

selectCharacterButton.MouseButton1Click:Connect(selectCharacter)
singlePreviewButton.MouseButton1Click:Connect(function() showPreview(tonumber(singleInputBox.Text)) end)
singleImportButton.MouseButton1Click:Connect(importSingleAccessory)
clearAccessoriesButton.MouseButton1Click:Connect(clearAllAccessories)

button.Click:Connect(function()
	widget.Enabled = not widget.Enabled
end)

setStatus("Ready", COLORS.Text)

widget:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
	mainFrame.Size = UDim2.new(1, -20, 1.2, 0)
end)]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
</roblox>